---------------linux commands--------------
1)cd/--> go to the root directory
2)ls -->show all the files and folders in the current directory
3)cd.. --> one step before
4)mkdir <dir name> -->make folder in the current directory
5)touch app.js -->create file in the current directory
6)vi <file name> -->to open file in editor in terminal
6(A) press i in editor to insert mode on
6(B) press escape to come back from insert mode in file
6(C) after writing in a file , press shift + colon then write wq to quit
7) cat <file name> --> to read the file in the folder
every data in CLI is access through root
8) to copy a file from directory A to B then go to the Directory A and write command cp <file name which is in A> <path to the directory B from root>
9) if you want to move file From directory A to B then go to Directory A and write command mv <file name> <path from root to the directory B>     (this file should remove from dirA now>
10) rm <file name> to remove file in current directory
11) man <any linux command> will give you the description of the command
12) if you want to find the file in the directory from multiple files then go to that directory and write find <path to that directory from root> -name <file name>  -->it returns path of that file if found otherwise return nothing
13) uname a -->returns the name of OS currently running
14) uname -a -->returns the architecture of processor, and version of OS etc
15) lscpu --> returns the complete description of cpu
16) df -h -->returns human readable disk size 
17) du <path to the current directory>  --> returns the disk size attained by each file and folder
18) du -s <path to the current directory> -->returns the total space of the current directory
19) date -->returns system time and date
20) cal -->returns system calendar  
21) clear --> to clear the working screen
22) apt-get install <package name> -->install the desired package in the system
23) apt-cache search <keyword for the package to search>
24) type <command> --> give the location of that command store in your system
25) free --> free and used memory
26) ps --> shows all the running jobs
27) kill <process id get from ps > --> close that running process
28) nice --> set the priority in cpu of the programs
29) top -->dynamic real-time view of cpu and memory
30) su - -->move to the admin view
31) shutdown -->shutdown the system
------------------user roles--------------------
if you want to install a package then you should login with root user.
solution:
sudo su  --> password enter then root user is active
but every time login to root is bad practise then enter the command
sudo <command to install package> i-e sudo apt-get install python
---------------------shortcut--------------------
apt-g+tab to complete command apt-get 
ins+tab --> install
apt+tab+tab -->all commands with apt
ctrl+a  -->cursor reaches at the beggining of the command
ctrl+e -->cursor reaches at the end of the command
arrow up -->last typed commands
arrow down --> next commands
---------------------permissions----------------
.sh file -->sh files are unix (linux) shell executables files, they are the equivalent (but much more powerful) of bat files on windows. So you need to run it from a linux console, just typing its name the same you do with bat files on windows.
scripting in linux : 1) create file sample.sh 2) open file with vi sample.sh 3) write echo "my name is" : $1 where dollar1 will be our argument which we will pass
4) then run file by ./sample.sh faraz where faraz is the $1 argument
if error occured then you have to grant permission to that file
0 no permission , 1 executable permission //which is missing in our case
,2 write permission and 4 for read permission
if you want to check permissions on your file then write ls -L(small) to check
then there appears 3 classes with 1st class rw(read-write permissions) to the owner
2nd class rw permissions to the groups you assigns
3rd class r(read) to the users

then to grant permissions to the file we have ,
chmod 777 <file name>
where 7=(0+1+2+4) and triple 7 for all the three classes of users
after that you can execute your script file
-------------------more commands----------------
1)uptime -->Uptime is a command that returns information about how long your system has been running together with the current time, number of users with running sessions, and the system load averages 
2)uname -->name the os you are using
3)uname -srv --> os name,version and releases
4)man <command> --> all commands functions
5) cd ` --> move to the root and home directory
6) pwd --> current directory
7)hostname 
8)hostname -i -->ip address current
9) cp <file name> <destination path> -->copy file
10) search by name " find <path of searching dir> -name <file name> "
11) search by name with any ext " find <path of searching dir> -name <file name*> "
----------------------check hardware specs-----------------------
1)uname -a -->cpu information
2)uname -p -->check processor
3) cat /proc/cpuinfo --> more cpu info
4) df --> mounted harddisk
5) df -h --> human readable form hardisk info









